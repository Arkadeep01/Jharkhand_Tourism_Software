AI Implementations/
    ├── data/
        ├── Chatbot/
            ├── Mundari.json
            └── Santhali.json
        ├── itinerary/
            ├── events.csv
            ├── sample_itinerary_output.json
            ├── tourism_places.csv
            └── user_profiles.csv
        ├── Translator.json/
            ├── mundari_trans.json
            └── santhali_trans.json
        └── .DS_Store
    ├── ItineraryPlanner/
        ├── tests/
            └── test_itinerary.py
        ├── __init__.py
        ├── itinerary.py
        ├── recommender.py
        ├── storage.py
        └── utils.py
    ├── src/
        ├── __init__.py
        ├── app.py
        ├── chatbot.py
        ├── db.py
        ├── setup.py
        └── translator.py
    ├── .DS_Store
    ├── package-lock.json
    └── package.json
analytics_service/
    ├── utils/
        ├── __init__.py
        └── db.py
    ├── aggregator.py
    ├── app.py
    ├── export.py
    └── requirements.txt
Blockchain/
    ├── contracts/
        ├── cert_id.sol
        ├── Counter.sol
        ├── Counter.t.sol
        └── PaymentProof.sol
    ├── ignition/
        └── modules/
            └── Counter.ts
    ├── scripts/
        ├── deploy.js
        ├── deply_cert.js
        └── send-op-tx.ts
    ├── src/
        ├── db.py
        ├── mint_certificates.py
        ├── save_payment.py
        ├── upload_certificates.py
        └── webhook_server.py
    ├── test/
        └── Counter.ts
    ├── .gitignore
    ├── hardhat.config.ts
    ├── hardhat.d.ts
    ├── package-lock.json
    ├── package.json
    ├── tsconfig.json
    └── yarn.lock
Community/
    └── Fraud_Detection/
        ├── aggregations/
            ├── cron_jbs.py
            ├── daily_aggregation.py
            └── user_risk.py
        ├── alerts/
            ├── __init__.py
            └── alerts.py
        ├── data/
            └── synthetic_transactions.csv
        ├── db/
            ├── __init__.py
            └── connection.py
        ├── Fraud_API/
            ├── Dockerfile
            ├── main.py
            └── routes.py
        ├── worker/
            ├── __init__.py
            ├── Dockerfile
            └── scorer.py
        ├── app.py
        ├── docker-compose.yml
        ├── requirements.txt
        └── train_model.py
firebase-auth-app/
    ├── public/
        ├── index.html
        └── site.png
    ├── src/
        ├── components/
            ├── AuthForm.tsx
            ├── SignIn.tsx
            └── SignUp.tsx
        ├── firebase/
            └── config.ts
        ├── pages/
            ├── HomePage.tsx
            ├── SignInPage.tsx
            └── SignUpPage.tsx
        ├── types/
            └── index.ts
        ├── App.tsx
        └── index.tsx
    ├── package.json
    ├── README.md
    └── tsconfig.json
Profile_Section/
    ├── api/
        └── v1/
            └── routers/
                ├── account_router.py
                ├── announcements_router.py
                ├── appearance_router.py
                ├── auth_router.py
                ├── eco_router.py
                ├── notices_router.py
                ├── profile_router.py
                ├── settings_router.py
                └── tourism_router.py
    ├── Core/
        ├── config.py
        ├── firebase_admin_init.py
        └── security.py
    ├── crud/
        ├── announcement.py
        ├── appearance.py
        ├── eco_action.py
        ├── eco_transaction.py
        ├── notice.py
        ├── redemption.py
        └── user.py
    ├── db/
        ├── __init__.py
        ├── base.py
        └── session.py
    ├── mitigation/
        ├── __init__.py
        ├── mitigation_service.py
        ├── models.py
        ├── routes.py
        └── schemas.py
    ├── models/
        ├── __init__.py
        ├── announcement.py
        ├── appearance.py
        ├── eco_action.py
        ├── eco_transaction.py
        ├── notice.py
        ├── redemption.py
        └── user.py
    ├── schemas/
        ├── announcement.py
        ├── appearance.py
        ├── auth.py
        ├── eco_action.py
        ├── eco_transaction.py
        ├── notice.py
        ├── redemption.py
        └── user.py
    ├── services/
        ├── __init__.py
        ├── appearance.py
        ├── credit_engine.py
        ├── file_service.py
        ├── notification_service.py
        └── redemption_engine.py
    ├── tests/
        └── test_rewards.py
    ├── utils/
        ├── response.py
        ├── scoring.py
        └── validators.py
    ├── __init__.py
    ├── app.py
    ├── db.py
    ├── helpers.py
    ├── main_routes.py
    └── requirements.txt
.DS_Store
.env
.gitattributes
.gitignore
docker-compose.yml
LICENSE
README.md
requirements.txt
template.sh
